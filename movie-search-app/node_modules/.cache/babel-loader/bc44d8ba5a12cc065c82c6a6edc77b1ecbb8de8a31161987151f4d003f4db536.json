{"ast":null,"code":"var _jsxFileName = \"D:\\\\LR_W\\\\movie-search-app\\\\src\\\\pages\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { fetchMovies } from \"../services/api\";\nimport MovieCard from \"../components/MovieCard\";\nimport SearchBar from \"../components/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst genres = [\"Action\", \"Comedy\", \"Drama\", \"Horror\", \"Romance\"];\nconst languages = [\"English\", \"French\", \"Spanish\", \"German\", \"Chinese\"];\nconst Home = () => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\n  useEffect(() => {\n    fetchMovies(\"popular\").then(setMovies); // Default popular movies\n  }, []);\n  const handleSearch = query => {\n    fetchMovies(query, selectedGenre, selectedLanguage).then(setMovies);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [/*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"genre\",\n        children: \"Filter by Genre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"genre\",\n        value: selectedGenre,\n        onChange: e => setSelectedGenre(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), genres.map(genre => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: genre,\n          children: genre\n        }, genre, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"language\",\n        children: \"Filter by Language:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"language\",\n        value: selectedLanguage,\n        onChange: e => setSelectedLanguage(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), languages.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: lang,\n          children: lang\n        }, lang, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-grid\",\n      children: movies.length ? movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n        movie: movie\n      }, movie.imdbID, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 33\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No movies found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"KQUKON5WlHS3AUHu/Fe3ngmZrxU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","fetchMovies","MovieCard","SearchBar","jsxDEV","_jsxDEV","genres","languages","Home","_s","movies","setMovies","selectedGenre","setSelectedGenre","selectedLanguage","setSelectedLanguage","then","handleSearch","query","className","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","map","genre","lang","length","movie","imdbID","_c","$RefreshReg$"],"sources":["D:/LR_W/movie-search-app/src/pages/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { fetchMovies } from \"../services/api\";\r\nimport MovieCard from \"../components/MovieCard\";\r\nimport SearchBar from \"../components/SearchBar\";\r\n\r\nconst genres = [\"Action\", \"Comedy\", \"Drama\", \"Horror\", \"Romance\"];\r\nconst languages = [\"English\", \"French\", \"Spanish\", \"German\", \"Chinese\"];\r\n\r\nconst Home = () => {\r\n  const [movies, setMovies] = useState([]);\r\n  const [selectedGenre, setSelectedGenre] = useState(\"\");\r\n  const [selectedLanguage, setSelectedLanguage] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetchMovies(\"popular\").then(setMovies); // Default popular movies\r\n  }, []);\r\n\r\n  const handleSearch = (query) => {\r\n    fetchMovies(query, selectedGenre, selectedLanguage).then(setMovies);\r\n  };\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      <SearchBar onSearch={handleSearch} />\r\n      {/* Filter by Genre */}\r\n      <div className=\"filters\">\r\n        <label htmlFor=\"genre\">Filter by Genre:</label>\r\n        <select\r\n          id=\"genre\"\r\n          value={selectedGenre}\r\n          onChange={(e) => setSelectedGenre(e.target.value)}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {genres.map((genre) => (\r\n            <option key={genre} value={genre}>\r\n              {genre}\r\n            </option>\r\n          ))}\r\n        </select>\r\n\r\n        {/* Filter by Language */}\r\n        <label htmlFor=\"language\">Filter by Language:</label>\r\n        <select\r\n          id=\"language\"\r\n          value={selectedLanguage}\r\n          onChange={(e) => setSelectedLanguage(e.target.value)}\r\n        >\r\n          <option value=\"\">All</option>\r\n          {languages.map((lang) => (\r\n            <option key={lang} value={lang}>\r\n              {lang}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Display Movies */}\r\n      <div className=\"movie-grid\">\r\n        {movies.length ? (\r\n          movies.map((movie) => <MovieCard key={movie.imdbID} movie={movie} />)\r\n        ) : (\r\n          <p>No movies found.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}